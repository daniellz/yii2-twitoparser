<?php

namespace app\models;

use vova07\console\ConsoleRunner;
use Yii;

/**
 * This is the model class for table "breaks".
 *
 * @property int $id
 * @property string $word
 * @property string $max_id
 * @property int $group_id
 *
 * @property BreakGroups $group
 * @property Checked[] $checkeds
 */
class Breaks extends \yii\db\ActiveRecord
{
    public $start_filter = false;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'breaks';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['word'], 'required'],
            [['max_id'], 'string', 'max' => 255],
            [['group_id'], 'default', 'value' => null],
            [['group_id'], 'integer'],
            [['word'], 'string', 'max' => 255],
            [['group_id'], 'exist', 'skipOnError' => true, 'targetClass' => BreakGroups::className(), 'targetAttribute' => ['group_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'word' => 'Word',
            'group_id' => 'Group ID',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGroup()
    {
        return $this->hasOne(BreakGroups::className(), ['id' => 'group_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCheckeds()
    {
        return $this->hasMany(Checked::className(), ['break_id' => 'id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        if($insert && $this->start_filter)
        {
            $cr = new ConsoleRunner(['file' => Yii::getAlias('@app').'/yii']);
            $cr->run('twitter/filter '.$this->group->channel_id);
        }
    }
}
